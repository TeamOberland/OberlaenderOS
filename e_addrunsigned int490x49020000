[1mdiff --git a/OberlaenderOS/.settings/org.eclipse.core.resources.prefs b/OberlaenderOS/.settings/org.eclipse.core.resources.prefs[m
[1mindex 8949103..67a0012 100644[m
[1m--- a/OberlaenderOS/.settings/org.eclipse.core.resources.prefs[m
[1m+++ b/OberlaenderOS/.settings/org.eclipse.core.resources.prefs[m
[36m@@ -9,6 +9,8 @@[m [mencoding//Debug/driver/subdir_rules.mk=UTF-8[m
 encoding//Debug/driver/subdir_vars.mk=UTF-8[m
 encoding//Debug/drivers/subdir_rules.mk=UTF-8[m
 encoding//Debug/drivers/subdir_vars.mk=UTF-8[m
[32m+[m[32mencoding//Debug/kernel/MMU/subdir_rules.mk=UTF-8[m
[32m+[m[32mencoding//Debug/kernel/MMU/subdir_vars.mk=UTF-8[m
 encoding//Debug/kernel/arch/omap3530/display/subdir_rules.mk=UTF-8[m
 encoding//Debug/kernel/arch/omap3530/display/subdir_vars.mk=UTF-8[m
 encoding//Debug/kernel/arch/omap3530/gpio/subdir_rules.mk=UTF-8[m
[1mdiff --git a/OberlaenderOS/driver/uart_driver.c b/OberlaenderOS/driver/uart_driver.c[m
[1mindex 515e1fe..1de656b 100644[m
[1m--- a/OberlaenderOS/driver/uart_driver.c[m
[1m+++ b/OberlaenderOS/driver/uart_driver.c[m
[36m@@ -78,13 +78,13 @@[m [mint16_t uart_driver_read(device_id_t device, void* buffer, uint32_t count)[m
     registered_uart_t* reg = uart_get_registered(device);[m
     int i = 0;[m
 [m
[32m+[m[32m    while (uart_is_empty_read_queue(reg->uart_port));[m
     for (; i < count; i++) {[m
         // block while waiting for data[m
[31m-        while (uart_is_empty_read_queue(reg->uart_port));[m
[31m-        uart_read(reg->uart_port, castedBuffer);[m
[32m+[m[32m        uart_read(reg->uart_port, &castedBuffer[i]);[m
     }[m
 [m
[31m-    return i;[m
[32m+[m[32m    return 0;[m
 }[m
 [m
 int16_t uart_driver_write(device_id_t device, void* buffer, uint32_t count)[m
[36m@@ -94,10 +94,9 @@[m [mint16_t uart_driver_write(device_id_t device, void* buffer, uint32_t count)[m
     if (reg != NULL)[m
     {[m
         int i = 0;[m
[31m-        for (; i < count; i++, castedBuffer++) {[m
[32m+[m[32m        for (; i < count; i++) {[m
             // block while queue is full[m
[31m-            while (!uart_is_empty_write_queue(reg->uart_port))[m
[31m-                ;[m
[32m+[m[32m            while (!uart_is_empty_write_queue(reg->uart_port))                ;[m
             uart_write(3, castedBuffer);[m
         }[m
     }[m
[1mdiff --git a/OberlaenderOS/kernel/arch/omap3530/uart/uart.c b/OberlaenderOS/kernel/arch/omap3530/uart/uart.c[m
[1mindex 25eb808..97bd0c0 100644[m
[1m--- a/OberlaenderOS/kernel/arch/omap3530/uart/uart.c[m
[1m+++ b/OberlaenderOS/kernel/arch/omap3530/uart/uart.c[m
[36m@@ -36,15 +36,100 @@[m [minline void omap_uart_set_mode(uint8_t uartPort,uint32_t mode)[m
     *(disableRegister) &= value;[m
 }[m
 [m
[31m-void omap_uart_switch_to_config_mode(uint8_t uartPort)[m
[32m+[m[32muint32_t omap_uart_switch_to_config_mode_b(uint8_t uartPort)[m
 {[m
     memory_mapped_io_t configRegister =omap_uart_get_register(uartPort, UART_LCR_REG);[m
[32m+[m[32m    uint32_t lcr_reg_value = *configRegister;[m
     /* set the value on register */[m
[31m-    *(configRegister) = UART_LCR_MODE_CONFIG;[m
[32m+[m[32m    *(configRegister) = UART_LCR_MODE_CONFIG_B;[m
[32m+[m
[32m+[m[32m    return lcr_reg_value;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32muint32_t omap_uart_switch_to_config_mode_a(uint8_t uartPort)[m
[32m+[m[32m{[m
[32m+[m[32m    memory_mapped_io_t configRegister =omap_uart_get_register(uartPort, UART_LCR_REG);[m
[32m+[m[32m    uint32_t lcr_lcr_value = *configRegister;[m
[32m+[m[32m    /* set the value on register */[m
[32m+[m[32m    *(configRegister) = UART_LCR_MODE_CONFIG_A;[m
[32m+[m
[32m+[m[32m    return lcr_lcr_value;[m
 }[m
 [m
[32m+[m
 void omap_uart_load_configuration(uint8_t uartPort,uint8_t uart_mode, uart_protocol_format_t configuration)[m
 {[m
[32m+[m[32m    uint32_t saved_lcr_reg,saved_efr_reg,saved_tcr_reg,saved_tlr_reg,saved_tcr_TLR;[m
[32m+[m[32m    //17.5.1.1.1 UART Software Reset Site: 2734[m
[32m+[m
[32m+[m[32m    //1[m
[32m+[m[32m    saved_lcr_reg= omap_uart_switch_to_config_mode_b(uartPort);[m
[32m+[m
[32m+[m[32m    //2[m
[32m+[m[32m    memory_mapped_io_t efr_reg = omap_uart_get_register(uartPort,UART_EFR_REG);[m
[32m+[m[32m    saved_efr_reg = READ_BIT(efr_reg,4);[m
[32m+[m[32m    SET_BIT(efr_reg,UART_ENHANCED_EN);[m
[32m+[m
[32m+[m[32m    //3[m
[32m+[m[32m    omap_uart_switch_to_config_mode_a(uartPort);[m
[32m+[m
[32m+[m[32m    //4[m
[32m+[m[32m    memory_mapped_io_t mcr_reg = omap_uart_get_register(uartPort,UART_MCR_REG);[m
[32m+[m[32m    saved_tcr_TLR = READ_BIT(mcr_reg,6);[m
[32m+[m[32m    SET_BIT(mcr_reg,UART_TCR_TLR);[m
[32m+[m[32m    //5[m
[32m+[m[32m    memory_mapped_io_t tlr_reg = omap_uart_get_register(uartPort,UART_FCR_REG);[m
[32m+[m[32m    SET_BIT(tlr_reg,UART_DMA_MODE);[m
[32m+[m[32m    SET_BIT(tlr_reg,UART_ENABLE_FIFO);[m
[32m+[m
[32m+[m[32m    //6[m
[32m+[m[32m    omap_uart_switch_to_config_mode_b(uartPort);[m
[32m+[m
[32m+[m[32m    //7[m
[32m+[m
[32m+[m[32m    //8[m
[32m+[m[32m    SET_BIT(tlr_reg,7);//Enables the granularity of 1 for TRIGGER RX level[m
[32m+[m[32m    SET_BIT(tlr_reg,6);//Enables the granularity of 1 for trigger TX level[m
[32m+[m[32m    SET_BIT(tlr_reg,2);//DMA mode 1 (UARTi_DMA_TX, UARTi_DMA_RX)[m
[32m+[m
[32m+[m[32m    //9[m
[32m+[m[32m    *(efr_reg)|=saved_efr_reg;//restore the ENHANCED_EN BIT[m
[32m+[m
[32m+[m
[32m+[m[32m    //10[m
[32m+[m[32m    omap_uart_switch_to_config_mode_a(uartPort);[m
[32m+[m
[32m+[m[32m    //11[m
[32m+[m[32m    *(efr_reg)|= (saved_tcr_TLR);[m
[32m+[m
[32m+[m[32m    //12[m
[32m+[m[32m    memory_mapped_io_t lcr_reg = omap_uart_get_register(uartPort,UART_LCR_REG);[m
[32m+[m[32m    *(lcr_reg)=saved_lcr_reg;[m
[32m+[m
[32m+[m
[32m+[m[32m    //17.5.1.1.3 Protocol, Baud Rate, and Interrupt Settings SITE 2734[m
[32m+[m
[32m+[m[32m    //1[m
[32m+[m[32m    omap_uart_disable(uartPort);[m
[32m+[m
[32m+[m[32m    //2[m
[32m+[m[32m    omap_uart_switch_to_config_mode_b(uartPort);[m
[32m+[m
[32m+[m[32m    //3[m
[32m+[m[32m    saved_efr_reg = READ_BIT(efr_reg,UART_ENHANCED_EN);[m
[32m+[m[32m    SET_BIT(efr_reg,UART_ENHANCED_EN);[m
[32m+[m
[32m+[m[32m    //4[m
[32m+[m[32m    *(lcr_reg)=0;[m
[32m+[m
[32m+[m[32m    //5[m
[32m+[m[32m    memory_mapped_io_t ier_reg =omap_uart_get_register(uartPort,UART_IER_REG);[m
[32m+[m[32m    *(ier_reg)=0;[m
[32m+[m
[32m+[m[32m    //6[m
[32m+[m[32m    omap_uart_switch_to_config_mode_b(uartPort);[m
[32m+[m
[32m+[m[32m    //7[m
     /*baudrate*/[m
     memory_mapped_io_t registerToSet =omap_uart_get_register(uartPort,UART_DLL_REG);[m
     /* only use the first 2 bytes the other bytes are saved in dlh register (we dont use this ;-) )*/[m
[36m@@ -55,6 +140,22 @@[m [mvoid omap_uart_load_configuration(uint8_t uartPort,uint8_t uart_mode, uart_proto[m
     registerToSet =omap_uart_get_register(uartPort,UART_DLH_REG);[m
         *(registerToSet) = (configuration.baudrate   >> 8);/*todo read docu this value is just copied!*/[m
 [m
[32m+[m[32m    //8[m
[32m+[m[32m    *(lcr_reg)=0;[m
[32m+[m
[32m+[m[32m    //9 disable interrupts[m
[32m+[m[32m    SET_BIT(efr_reg,1);[m
[32m+[m
[32m+[m[32m    //10[m
[32m+[m[32m    omap_uart_switch_to_config_mode_b(uartPort);[m
[32m+[m
[32m+[m[32m    //11[m
[32m+[m[32m    *(efr_reg) |= saved_efr_reg;[m
[32m+[m
[32m+[m[32m    //12[m
[32m+[m[32m    //operational mode[m
[32m+[m[32m    CLEAR_BIT(lcr_reg,7);[m
[32m+[m
     /*flow control*/[m
         registerToSet =omap_uart_get_register(uartPort,UART_EFR_REG);[m
         /*clear flow control config*/[m
[36m@@ -62,8 +163,6 @@[m [mvoid omap_uart_load_configuration(uint8_t uartPort,uint8_t uart_mode, uart_proto[m
             *(registerToSet) = configuration.flowControl;[m
 [m
 [m
[31m-[m
[31m-[m
             /* clear LCR DIV and BREAK field */[m
             CLEAR_BIT(omap_uart_get_register(uartPort, UART_LCR_REG), UART_LCR_DIV_EN);[m
             CLEAR_BIT(omap_uart_get_register(uartPort, UART_LCR_REG), UART_LCR_BREAK_EN);[m
[36m@@ -93,6 +192,7 @@[m [mvoid omap_uart_load_configuration(uint8_t uartPort,uint8_t uart_mode, uart_proto[m
                 break;[m
             }[m
 [m
[32m+[m[32m            //13[m
             omap_uart_set_mode(uartPort,uart_mode );[m
 }[m
 [m
[36m@@ -150,14 +250,15 @@[m [mbool_t __uart_init(uint8_t uartPort,uint8_t uartMode, uart_protocol_format_t con[m
 {[m
     omap_uart_software_reset(uartPort);[m
 [m
[31m-    omap_uart_switch_to_config_mode(uartPort);[m
[31m-[m
     omap_uart_load_configuration(uartPort,uartMode,config);[m
[32m+[m
[32m+[m[32m    return 0;[m
 }[m
 [m
 bool_t __uart_disable(uint8_t uartPort)[m
 {[m
     omap_uart_disable(uartPort);[m
[32m+[m[32m    return 0;[m
 }[m
 [m
 [m
[36m@@ -175,11 +276,14 @@[m [mbool_t __uart_is_empty_write_queue(uint8_t uartPort) {[m
 uint32_t __uart_write(uint8_t uartPort, uint8_t* buffer) {[m
     memory_mapped_io_t uart_base_addr =omap_uart_get_register(uartPort,UART_THR_REG);[m
   *(uart_base_addr) = *buffer;[m
[32m+[m
[32m+[m[32m  return 0;[m
 }[m
 [m
 /* reads one character from the UART device */[m
 uint32_t __uart_read(uint8_t uartPort, uint8_t* buffer) {[m
     memory_mapped_io_t uart_base_addr =omap_uart_get_register(uartPort,UART_RHR_REG);[m
   *buffer = *uart_base_addr;[m
[32m+[m[32m  return 0;[m
 }[m
 [m
[1mdiff --git a/OberlaenderOS/kernel/arch/omap3530/uart/uart.h b/OberlaenderOS/kernel/arch/omap3530/uart/uart.h[m
[1mindex 4c153ac..99d00b4 100644[m
[1m--- a/OberlaenderOS/kernel/arch/omap3530/uart/uart.h[m
[1m+++ b/OberlaenderOS/kernel/arch/omap3530/uart/uart.h[m
[36m@@ -31,6 +31,13 @@[m
 #define UART_THR_REG        0x000 /* W FIFO transmission */[m
 #define UART_DLH_REG        0x004 /* RW */[m
 #define UART_IER_REG        0x004 /* RW */[m
[32m+[m[32m#define UART_TLR_REG        0x01C[m
[32m+[m[32m#define UART_FCR_REG        0x008[m
[32m+[m[32m#define UART_EFR_REG        0x008 /* RW */[m
[32m+[m[32m#define UART_SCR_REG        0x040 /* RW */[m
[32m+[m[32m#define UART_MCR_REG        0x010 /* RW */[m
[32m+[m
[32m+[m
 [m
 #define UART_MVR_REG        0x050 /* R */[m
 #define UART_SYSC_REG       0x054 /* RW */[m
[36m@@ -53,13 +60,14 @@[m
 #define UART_LCR_PARITY_T2  5[m
 #define UART_LCR_BREAK_EN   6[m
 #define UART_LCR_DIV_EN     7[m
[31m-[m
[31m-#define UART_EFR_REG        0x008 /* RW */[m
[31m-[m
[32m+[m[32m#define UART_ENHANCED_EN    4[m
[32m+[m[32m#define UART_TCR_TLR       6 /* RW */[m
[32m+[m[32m#define UART_DMA_MODE       3 /* RW */[m
[32m+[m[32m#define UART_ENABLE_FIFO     0 /* RW */[m
 /*PDF: 2752*/[m
 /*no parity configuration mode 8bits word length*/[m
[31m-//#define UART_LCR_MODE_CONFIG  0x083[m
[31m-#define UART_LCR_MODE_CONFIG 0x00BF[m
[32m+[m[32m#define UART_LCR_MODE_CONFIG_A  0x083[m
[32m+[m[32m#define UART_LCR_MODE_CONFIG_B 0x00BF[m
 [m
 /* for configuration */[m
 #define UART_LCR_REG        0x00C /* RW */[m
[1mdiff --git a/OberlaenderOS/kernel/generic/io/uart.c b/OberlaenderOS/kernel/generic/io/uart.c[m
[1mindex 771a011..ba30445 100644[m
[1m--- a/OberlaenderOS/kernel/generic/io/uart.c[m
[1m+++ b/OberlaenderOS/kernel/generic/io/uart.c[m
[36m@@ -14,11 +14,7 @@[m
 */[m
 uint32_t uart_init(uint8_t uartPort)[m
 {[m
[31m-    __uart_init(uartPort,UART_MDR1_MODE_SELECT_16X,uart_protocol_rs232);[m
[31m-    if(__uart_is_valid_port(uartPort))[m
[31m-    return __uart_is_empty_write_queue(uartPort);[m
[31m-[m
[31m-    return 0;[m
[32m+[m[32m    return __uart_init(uartPort,UART_MDR1_MODE_SELECT_16X,uart_protocol_rs232);[m
 }[m
 [m
 /*[m
[1mdiff --git a/OberlaenderOS/lib/device.c b/OberlaenderOS/lib/device.c[m
[1mindex a8ace67..26e068d 100644[m
[1m--- a/OberlaenderOS/lib/device.c[m
[1m+++ b/OberlaenderOS/lib/device.c[m
[36m@@ -17,7 +17,7 @@[m [mdevice_handle_t api_device_open(device_id_t device)[m
 [m
 void api_device_close(device_handle_t handle)[m
 {[m
[31m-    syscall(SYSCALL_DEVICE_CLOSE, (uint32_t) handle, 0, 0);[m
[32m+[m[32m    syscall(SYSCALL_DEVICE_CLOSE, (uint32_t) &handle,0, 0, 0,0);[m
 }[m
 [m
 void api_device_read(device_handle_t handle, void* buffer, uint32_t count)[m
[1mdiff --git a/OberlaenderOS/main_manuel.c b/OberlaenderOS/main_manuel.c[m
[1mindex d050d82..2d9e18f 100644[m
[1m--- a/OberlaenderOS/main_manuel.c[m
[1m+++ b/OberlaenderOS/main_manuel.c[m
[36m@@ -12,7 +12,7 @@[m
 #include "kernel/generic/driver/driver.h"[m
 #include "kernel/generic/driver/device_manager.h"[m
 [m
[31m-#include "driver/gpio_driver.h"[m
[32m+[m[32m#include "driver/gpio/gpio_driver.h"[m
 #include "driver/uart_driver.h"[m
 [m
 extern void task_blink_led0(void);[m
[1mdiff --git a/OberlaenderOS/tasks/task_console.c b/OberlaenderOS/tasks/task_console.c[m
[1mindex 2dcd446..76ffeb8 100644[m
[1m--- a/OberlaenderOS/tasks/task_console.c[m
[1m+++ b/OberlaenderOS/tasks/task_console.c[m
[36m@@ -16,27 +16,25 @@[m
 [m
 void task_console(void)[m
 {[m
[31m-    uint8_t toRead[255];[m
[31m-    memset(&toRead,0,255);[m
[31m-    uint8_t* position = &toRead[0];[m
[32m+[m[32m    uint8_t toRead[64];[m
[32m+[m[32m    uint8_t index = 0;[m
[32m+[m[32m    memset(&toRead,0,64);[m
     device_id_t uartDevice = (1<<4)+UART_3;[m
     device_handle_t handle= api_device_open(uartDevice);[m
     api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-    api_device_write(handle,"hallo\r\n\0",8);[m
[31m-[m
[31m-    while((position!="\n"&&(position+1)!="\r")||&toRead[254]==position)[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m//    api_device_write(handle,"hallo\r\n\0",8);[m
[32m+[m[32m    while(TRUE)[m
     {[m
[31m-        api_device_read(handle,&position,1);[m
[31m-        api_device_write(handle,&position,1);[m
[31m-        position++;[m
[32m+[m[32m        api_device_read(handle,&toRead,64);[m
[32m+[m
     }[m
 [m
 [m
